[{"E:\\Daniel\\Estudo-prog\\Projeto\\rich-text-react\\src\\reportWebVitals.js":"1","E:\\Daniel\\Estudo-prog\\Projeto\\rich-text-react\\src\\index.js":"2","E:\\Daniel\\Estudo-prog\\Projeto\\rich-text-react\\src\\main\\App.js":"3"},{"size":362,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":505,"mtime":1606645816455,"results":"6","hashOfConfig":"5"},{"size":3800,"mtime":1607394481494,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"164ut3c",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"E:\\Daniel\\Estudo-prog\\Projeto\\rich-text-react\\src\\reportWebVitals.js",[],"E:\\Daniel\\Estudo-prog\\Projeto\\rich-text-react\\src\\index.js",[],"E:\\Daniel\\Estudo-prog\\Projeto\\rich-text-react\\src\\main\\App.js",["15"],"import './App.css';\nimport boldimg from '../img/bold.svg'\nimport italicimg from '../img/italic.svg'\nimport underlineimg from '../img/underline.svg'\nimport left from '../img/align left.svg'\nimport center from '../img/align center.svg'\nimport right from '../img/align right.svg'\nimport justify from '../img/justify.svg'\nimport React, { useState } from 'react';\n\nexport default function App() {\n  const [firstPart, firstPartArray] = useState([false, false, false])\n  const [align, alignButton] = useState(0);\n  const [addOrRemoveClasses, addOrRemoveClassesFunc] = useState(['', '', '', 'textarea-align-left', '']);\n  const [textClasses, textClassesUsed] = useState('')\n\n  const classActive = (pos='', teste = '') => {\n    if (pos === 0) {\n      if (!firstPart[0]) {\n        addOrRemoveClasses[0] = 'textarea-bold'\n      }\n      else {\n        addOrRemoveClasses[0] = ''\n      }\n    }\n    else if (pos === 1) {\n      if (!firstPart[1]) {\n        addOrRemoveClasses[1] = 'textarea-italic'\n      }\n      else {\n        addOrRemoveClasses[1] = ''\n      }\n    }\n    else if (pos === 2) {\n      if (!firstPart[2]) {\n        addOrRemoveClasses[2] = 'textarea-underline'\n      }\n      else {\n        addOrRemoveClasses[2] = ''\n      }\n    }\n    else if (pos === 3) {\n      addOrRemoveClasses[3] = teste\n    }\n    textClassesUsed(addOrRemoveClasses.join(' '));\n  }\n\n  const fontChange = (event) => {\n    addOrRemoveClasses[4] = 'textarea-size-' + event.target.value.toString();\n    classActive();\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1 className=\"title\">Rich-Text</h1>\n        <div className=\"buttons-align\">\n          <div className=\"bold-italic-undeline\">\n            <button onClick={() => { firstPartArray(firstPart.map((item, index) => { if (index === 0) { return !item } else { return item } })); classActive(0) }} className={firstPart[0] ? 'button-active' : 'button-unactive'}><img src={boldimg} alt=\"bold\" /></button>\n            <button onClick={() => { firstPartArray(firstPart.map((item, index) => { if (index === 1) { return !item } else { return item } })); classActive(1) }} className={firstPart[1] ? 'button-active' : 'button-unactive'}><img src={italicimg} alt=\"italic\" /></button>\n            <button onClick={() => { firstPartArray(firstPart.map((item, index) => { if (index === 2) { return !item } else { return item } })); classActive(2) }} className={firstPart[2] ? 'button-active' : 'button-unactive'}><img src={underlineimg} alt=\"underline\" /></button>\n          </div>\n\n          <div className=\"align\">\n            <button onClick={() => { alignButton(0); classActive(3, 'textarea-align-left') }} className={align === 0 ? 'button-active' : 'button-unactive'}><img src={left} alt=\"left\" /></button>\n            <button onClick={() => { alignButton(1); classActive(3, 'textarea-align-center') }} className={align === 1 ? 'button-active' : 'button-unactive'}><img src={center} alt=\"center\" /></button>\n            <button onClick={() => { alignButton(2); classActive(3, 'textarea-align-right') }} className={align === 2 ? 'button-active' : 'button-unactive'}><img src={right} alt=\"right\" /></button>\n            <button onClick={() => { alignButton(3); classActive(3, 'textarea-align-justify') }} className={align === 3 ? 'button-active' : 'button-unactive'}><img src={justify} alt=\"justify\" /></button>\n          </div>\n\n          <select className=\"size-box\" onChange={fontChange}>\n            <option defaultValue=\"18\">18</option>\n            <option value=\"22\">22</option>\n            <option value=\"24\">24</option>\n            <option value=\"26\">26</option>\n          </select>\n        </div>\n\n        <textarea maxLength=\"410\" placeholder=\"Digite o que quiser...\" rows=\"10\" autoFocus className={textClasses}></textarea>\n      </header>\n    </div>\n  );\n}\n",{"ruleId":"16","severity":1,"message":"17","line":14,"column":30,"nodeType":"18","messageId":"19","endLine":14,"endColumn":52},"no-unused-vars","'addOrRemoveClassesFunc' is assigned a value but never used.","Identifier","unusedVar"]